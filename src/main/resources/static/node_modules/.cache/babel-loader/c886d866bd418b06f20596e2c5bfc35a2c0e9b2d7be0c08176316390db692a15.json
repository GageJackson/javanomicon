{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wgage\\\\IdeaProjects\\\\javanomicon\\\\src\\\\main\\\\resources\\\\static\\\\src\\\\layouts\\\\HomePage\\\\HomePage.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport TastingModel from \"../../models/TastingModel\";\nimport { SpinnerLoading } from \"../../Utils/SpinnerLoading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n  const [tastings, setTastings] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(null);\n  useEffect(() => {\n    const fetchTastings = async () => {\n      const url = \"http://localhost:8080/api/tastings/all\";\n      //const url: string = `${baseUrl}?page=0&size=4`;\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Something went wrong fetching tastings from API');\n      }\n      const responseJson = await response.json();\n      console.log(responseJson);\n\n      //const responseData = responseJson._embedded.tastings;\n      const loadedTastings = [];\n      for (const key in responseJson) {\n        loadedTastings.push(new TastingModel(responseJson[key].id, responseJson[key].tastingDate, responseJson[key].overallScore, responseJson[key].description, responseJson[key].tastingFlavors, responseJson[key].scoreAcidity, responseJson[key].scoreAroma, responseJson[key].scoreBalance, responseJson[key].scoreBody, responseJson[key].scoreFinish, responseJson[key].scoreFlavor, responseJson[key].scoreRoast, responseJson[key].scoreSweetness, responseJson[key].coffeeDetails, responseJson[key].brewDetails));\n      }\n      setTastings(loadedTastings);\n      setIsLoading(false);\n    };\n    fetchTastings().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(SpinnerLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'container m-5',\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(HomePage, \"1DsYATkCMPwhHdocQ0V/bTzQkWo=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","TastingModel","SpinnerLoading","jsxDEV","_jsxDEV","HomePage","_s","tastings","setTastings","isLoading","setIsLoading","httpError","setHttpError","fetchTastings","url","response","fetch","ok","Error","responseJson","json","console","log","loadedTastings","key","push","id","tastingDate","overallScore","description","tastingFlavors","scoreAcidity","scoreAroma","scoreBalance","scoreBody","scoreFinish","scoreFlavor","scoreRoast","scoreSweetness","coffeeDetails","brewDetails","catch","error","message","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["C:/Users/wgage/IdeaProjects/javanomicon/src/main/resources/static/src/layouts/HomePage/HomePage.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {useEffect, useState} from \"react\";\r\nimport TastingModel from \"../../models/TastingModel\";\r\nimport ScoreModel from \"../../models/ScoreModel\";\r\nimport BrewDetailModel from \"../../models/BrewDetailModel\";\r\nimport CoffeeDetailModel from \"../../models/CoffeeDetailModel\";\r\nimport {SpinnerLoading} from \"../../Utils/SpinnerLoading\";\r\n\r\nexport const HomePage = () => {\r\n\r\n    const [tastings, setTastings] = useState<TastingModel[]>([])\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [httpError, setHttpError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchTastings = async () => {\r\n            const url: string = \"http://localhost:8080/api/tastings/all\";\r\n            //const url: string = `${baseUrl}?page=0&size=4`;\r\n            const response = await fetch(url);\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Something went wrong fetching tastings from API');\r\n            }\r\n\r\n            const responseJson = await response.json();\r\n\r\n            console.log(responseJson);\r\n\r\n            //const responseData = responseJson._embedded.tastings;\r\n            const loadedTastings: TastingModel[] = [];\r\n\r\n            for (const key in responseJson){\r\n                loadedTastings.push(new TastingModel(\r\n                    responseJson[key].id,\r\n                    responseJson[key].tastingDate,\r\n                    responseJson[key].overallScore,\r\n                    responseJson[key].description,\r\n                    responseJson[key].tastingFlavors,\r\n                    responseJson[key].scoreAcidity,\r\n                    responseJson[key].scoreAroma,\r\n                    responseJson[key].scoreBalance,\r\n                    responseJson[key].scoreBody,\r\n                    responseJson[key].scoreFinish,\r\n                    responseJson[key].scoreFlavor,\r\n                    responseJson[key].scoreRoast,\r\n                    responseJson[key].scoreSweetness,\r\n                    responseJson[key].coffeeDetails,\r\n                    responseJson[key].brewDetails\r\n                ));\r\n            }\r\n\r\n            setTastings(loadedTastings);\r\n            setIsLoading(false);\r\n        };\r\n\r\n        fetchTastings().catch((error:any) => {\r\n            setIsLoading(false);\r\n            setHttpError(error.message);\r\n        })\r\n    }, []);\r\n\r\n    if (isLoading){\r\n        return (\r\n            <SpinnerLoading/>\r\n        )\r\n    }\r\n\r\n    if (httpError){\r\n        return (\r\n            <div className={'container m-5'}>\r\n                <p>{httpError}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>hello</h1>\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}